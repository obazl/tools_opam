load("@rules_cc//cc:defs.bzl", "cc_binary")
load("@makeheaders//rules:makeheaders.bzl", "makeheaders")
load("//config/cc:CONFIG.bzl",
     "BASE_COPTS",
     "BASE_LINKOPTS",
     "PROFILE",
     "define_module_version")

# LOCAL_REPO=repo_name()
## ERROR: repo_name not defined (v 7.0)
LOCAL_REPO=repository_name()[1:]

##########
cc_binary(
    name  = "config",
    visibility = ["//visibility:public"],
    srcs  = [
        "main.c",
        "config_pkg.c",
        "ext_emit_build_bazel.c",
        ":mkhdrs",
    ],
    deps = [
        "//lib:tools_opam",
        "@cwalk//lib:cwalk",
        "@findlibc//lib:findlibc",
        "@gopt//lib:gopt",
        "@liblogc//lib:logc",
        "@opamc//lib:opamc",
        # "@runfiles//lib:runfiles",
        "@uthash//lib:uthash",
    ],
    includes = ["."],
    copts = BASE_COPTS + [
        "-I$(GENDIR)/config/pkg",
    ],
    features = ["layering_check"],
    linkopts = BASE_LINKOPTS + [
        # "--verbose",
        # "-v",
    ],
    defines = PROFILE + select({
        ## for realpath
        "@platforms//os:linux": ["_XOPEN_SOURCE=500"],
        "//conditions:default": []
    }),
    local_defines = define_module_version() + [
        "LOCAL_REPO=\\\"{}\\\"".format(LOCAL_REPO),
        # "BAZEL_CURRENT_REPOSITORY=\\\"{}\\\"".format(repo_name()),
        "BAZEL_CURRENT_REPOSITORY=\\\"{}\\\"".format(package_relative_label("@tools_opam").repo_name)
    ],
    linkstatic = 1,
    # data  = [
    #     "//templates:bazel_wrapper.sh",
    #     # WARNING: keep in sync with //opam/BUILD.bazel
    #     "//templates/ocaml:ocaml_bigarray.BUILD",
    #     "//templates/ocaml:ocaml_bigarray_alias.BUILD",
    #     "//templates/ocaml:ocaml_c_ffi.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs-bytecomp.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs-common.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs-native-toplevel.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs-optcomp.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs-toplevel.BUILD",
    #     "//templates/ocaml:ocaml_compiler-libs_alias.BUILD",
    #     "//templates/ocaml/compiler_libs:bytecomp.BUILD",
    #     "//templates/ocaml/compiler_libs:common.BUILD",
    #     "//templates/ocaml/compiler_libs:optcomp.BUILD",
    #     "//templates/ocaml/compiler_libs:toplevel.BUILD",
    #     "//templates/ocaml/compiler_libs:native_toplevel.BUILD",
    #     "//templates/ocaml:ocaml_dynlink.BUILD",
    #     "//templates/ocaml:ocaml_dynlink_alias.BUILD",
    #     "//templates/ocaml:ocaml_num.BUILD",
    #     "//templates/ocaml:ocaml_ocamldoc.BUILD",
    #     "//templates/ocaml:ocaml_profiling.BUILD",
    #     "//templates/ocaml:ocaml_runtime.BUILD",
    #     "//templates/ocaml/runtime:runtime_sys.BUILD",
    #     "//templates/ocaml/runtime:runtime_vm.BUILD",
    #     "//templates/ocaml:ocaml_rtevents.BUILD",
    #     "//templates/ocaml:ocaml_rtevents_alias.BUILD",
    #     "//templates/ocaml:ocaml_stdlib.BUILD",
    #     "//templates/ocaml:ocaml_stdlib_alias.BUILD",
    #     "//templates/ocaml:ocaml_str.BUILD",
    #     "//templates/ocaml:ocaml_str_alias.BUILD",

    #     "//templates/platform:arch.BUILD",
    #     "//templates/platform:emitter.BUILD",
    #     "//templates/platform:executor.BUILD",
    #     "//templates/platform:platform.BUILD",

    #     "//templates:toolchain/adapters/local.BUILD",
    #     "//templates:toolchain/adapters/local.BUILD.mustache",
    #     "//templates:toolchain/adapters/linux/x86_64.BUILD",
    #     "//templates:toolchain/adapters/linux/arm.BUILD",
    #     "//templates:toolchain/adapters/macos/x86_64.BUILD",
    #     "//templates:toolchain/adapters/macos/arm.BUILD",
    #     "//templates:toolchain/profiles/profiles.BUILD",
    #     "//templates:toolchain/selectors/local.BUILD",
    #     "//templates:toolchain/selectors/linux/x86_64.BUILD",
    #     "//templates:toolchain/selectors/linux/arm.BUILD",
    #     "//templates:toolchain/selectors/macos/arm.BUILD",
    #     "//templates:toolchain/selectors/macos/x86_64.BUILD",
    #     # "//templates/host/bazel:BUILD.bazel",
    #     # "//templates/host/build:BUILD.bazel",
    #     # "//templates/host/target:BUILD.bazel",
    #     "//templates/ocaml:ocaml_threads.BUILD",
    #     "//templates/ocaml:ocaml_threads_alias.BUILD",
    #     "//templates/ocaml:ocaml_unix.BUILD",
    #     "//templates/ocaml:ocaml_unix_alias.BUILD",
    #     "//templates/ocaml:ocaml_version.BUILD",
    # ],
)

########
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "main.c",
        "config_pkg.c",
        "ext_emit_build_bazel.c"
    ],
    additional_srcs = [
        "//lib:tools_opam.h",
        "@liblogc//macros:ansi_colors.h"
    ] + select({
        "@obazl_config_cc//profile:dev?": [
            "@liblogc//macros:logging_debug.h"
        ],
        "//conditions:default": [
            "@liblogc//macros:logging_ndebug.h"
        ]
    }),
)
